{"version":3,"sources":["../../../api/controllers/businessController.js"],"names":["express","require","dummyModels","createBusiness","api","Router","post","req","res","body","name","status","json","message","error","address","newBiz","get","reqBody","query","location","bizLocation","filter","model","length","category","bizCategory","dummyData","id","parseInt","params","businessId","put","bizName","delete","i","splice","review","title","description","newId","newReview","push","dummyModel","console","log","module","exports"],"mappings":"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","file":"businessController.js","sourcesContent":["const express = require('express');\r\nconst dummyModels = require('../models/dummyData');\r\nconst createBusiness = require('../models/businessModel');\r\n\r\n\r\nlet api = express.Router();\r\n\r\n// '/v1/businesses' - Register business\r\napi.post('/', (req, res) => {\r\n\tif (!req.body.name) {\r\n\t\treturn res.status(400).json({\r\n\t\t\tmessage: 'Bad Request: name missing',\r\n\t\t\terror: true\r\n\t\t});\r\n\t} else if (!req.body.address) {\r\n\t\treturn res.status(400).json({\r\n\t\t\tmessage: 'Bad Request: address missing',\r\n\t\t\terror: true\r\n\t\t});\r\n\t}\r\n\tconst newBiz = createBusiness(req.body.name, req.body.address);\r\n\treturn res.status(201).json(newBiz);\r\n});\r\n\r\n// '/v1/businesses' - Read\r\napi.get('/', (req, res) => {\r\n\tconst reqBody = req.query;\r\n\tif (reqBody.location) {\r\n\t\tconst bizLocation = dummyModels.filter(model => model.location === reqBody.location);\r\n\t\tif (typeof bizLocation === 'undefined' || bizLocation.length === 0) {\r\n\t\t\tres.status(404).json({\r\n\t\t\t\tmessage: 'Not found',\r\n\t\t\t\terror: true\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tres.json({ bizLocation });\r\n\t\t}\r\n\t} else if (reqBody.category) {\r\n\t\tconst bizCategory = dummyModels.filter(model => model.category === reqBody.category);\r\n\t\tif (typeof bizCategory === 'undefined' || bizCategory.length === 0) {\r\n\t\t\tres.status(404).json({\r\n\t\t\t\tmessage: 'Not found',\r\n\t\t\t\terror: true\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tres.json({ bizCategory });\r\n\t\t}\r\n\t} else {\r\n\t\tres.json({ dummyModels,\terror: false });\r\n\t}\r\n});\r\n\r\n// '/v1/businesses/:businessId' - Get 1 record\r\napi.get('/:businessId', (req, res) => {\r\n\tfor (let dummyData of dummyModels) {\r\n\t\tif (dummyData.id === parseInt(req.params.businessId, 10)) {\r\n\t\t\treturn res.json({\r\n\t\t\t\tdummyData,\r\n\t\t\t\tmessage: 'success',\r\n\t\t\t\terror: false\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\treturn res.status(404).json({\r\n\t\tmessage: 'User not found',\r\n\t\terror: true\r\n\t});\r\n});\r\n\r\n// '/v1/businesses/:businessId' - Update\r\napi.put('/:businessId', (req, res) => {\r\n\tfor (let dummyData of dummyModels) {\r\n\t\tif (dummyData.id === parseInt(req.params.businessId, 10)) {\r\n\t\t\tdummyData.bizName = req.body.name;\r\n\t\t\treturn res.json({\r\n\t\t\t\tmessage: 'success',\r\n\t\t\t\terror: false\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\treturn res.status(404).json({\r\n\t\tmessage: 'User not found',\r\n\t\terror: true\r\n\t});\r\n});\r\n\r\n// '/v1/businesses/:businessId' - Delete\r\napi.delete('/:businessId', (req, res) => {\r\n\tfor (let i = 0; i < dummyModels.length; i += 1) {\r\n\t\tif (dummyModels[i].id === parseInt(req.params.businessId, 10)) {\r\n\t\t\tdummyModels.splice(i, 1);\r\n\t\t\treturn res.json({\r\n\t\t\t\tmessage: 'success',\r\n\t\t\t\terror: false\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\treturn res.status(404).json({\r\n\t\tmessage: 'User not found',\r\n\t\terror: true\r\n\t});\r\n});\r\n\r\n// '/v1/businesses/:businessId/reviews' - Get reviews\r\napi.get('/:businessId/reviews', (req, res) => {\r\n\tfor (let dummyData of dummyModels) {\r\n\t\tif (dummyData.id === parseInt(req.params.businessId, 10)) {\r\n\t\t\tconst { review } = dummyData;\r\n\t\t\treturn res.json({\r\n\t\t\t\treview,\r\n\t\t\t\tmessage: 'success',\r\n\t\t\t\terror: false\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\treturn res.status(404).json({\r\n\t\tmessage: 'User not found',\r\n\t\terror: true\r\n\t});\r\n});\r\n\r\n// '/v1/businesses/:businessId/reviews' - Post review\r\napi.post('/:businessId/reviews', (req, res) => {\r\n\tfor (let dummyData of dummyModels) {\r\n\t\tif (dummyData.id === parseInt(req.params.businessId, 10)) {\r\n\t\t\tconst { review } = dummyData;\r\n\t\t\tconst { title, description } = req.body;\r\n\t\t\tconst newId = review[(review.length) - 1].id + 1;\r\n\t\t\tconst newReview = {\r\n\t\t\t\tid: newId,\r\n\t\t\t\ttitle,\r\n\t\t\t\tdescription\r\n\t\t\t};\r\n\t\t\tif (!title) {\r\n\t\t\t\treturn res.status(400).json({\r\n\t\t\t\t\tmessage: 'Bad Request: title missing',\r\n\t\t\t\t\terror: true\r\n\t\t\t\t});\r\n\t\t\t} else if (!description) {\r\n\t\t\t\treturn res.status(400).json({\r\n\t\t\t\t\tmessage: 'Bad Request: description missing',\r\n\t\t\t\t\terror: true\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treview.push(newReview);\r\n\t\t\treturn res.status(201).json(review[(review.length) - 1]);\r\n\t\t}\r\n\t}\r\n\treturn res.status(404).json({\r\n\t\tmessage: 'User not found',\r\n\t\terror: true\r\n\t});\r\n});\r\n\r\n// '/v1/businesses?location=<location>' - Read\r\napi.get('/', (req, res) => {\r\n\tconst bizLocation = dummyModels.filter(dummyModel => dummyModel.location === req.query.location);\r\n\tconsole.log(req.query.location);\r\n\tres.json({\r\n\t\tbizLocation,\r\n\t\terror: false\r\n\t});\r\n});\r\n\r\nmodule.exports = api;\r\n"]}